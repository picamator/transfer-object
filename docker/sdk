#!/usr/bin/env bash

function show_usage() {
  echo "==================================="
  echo "    Transfer Object (Docker SDK)   "
  echo "==================================="
  echo "Usage: $0 [-x] <argument>"
  echo "Arguments:"
  echo "  -x                   Enable Xdebug during build"
  echo "  build                Build Docker containers"
  echo "  start                Start Docker containers"
  echo "  stop                 Stop Docker containers"
  echo "  cli                  Open container shell"
  echo "  composer <command>   Run composer command"
  echo "  phpstan              Run PHPStan"
  echo "  phpunit              Run PHPUnit"
  echo "  phpcs                Run PHP CodeSniffer"
  echo "  hook-install         Install CaptainHook"
  echo "  hook <command>       Run CaptainHook command"
  echo "  to-generate          Generate inertanl transfer objects"
  echo "  to-samples-generate  Generate sample transfer objects"
}

# vars
DOCKER_CONTAINER_NAME=transfer-object-php
PROJECT_ROOT="/home/transfer/transfer-object"

# options
ENABLE_XDEBUG=0

while getopts ":x" opt; do
  case ${opt} in
    x )
      ENABLE_XDEBUG=1
      ;;
    \? )
      show_usage
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

# arguments
case $1 in
  build)
    if [ "$ENABLE_XDEBUG" -eq 1 ]; then
      ENABLE_XDEBUG=1 docker compose build
    else
      docker compose build
    fi
    ;;
  start)
    docker compose up -d --remove-orphans
    ;;
  stop)
    docker compose stop
    ;;
  cli)
    docker exec -it $DOCKER_CONTAINER_NAME sh
    ;;
  composer)
    docker exec -i $DOCKER_CONTAINER_NAME composer $2
    ;;
  phpstan)
    docker exec -i $DOCKER_CONTAINER_NAME composer phpstan
    ;;
  phpunit)
    docker exec -i $DOCKER_CONTAINER_NAME composer phpunit
    ;;
  phpcs)
    docker exec -i $DOCKER_CONTAINER_NAME composer phpcs
    ;;
  hook-install)
    docker exec -i $DOCKER_CONTAINER_NAME composer captainhook install --only-enabled --run-mode=docker --run-exec="docker exec -i $DOCKER_CONTAINER_NAME"
    ;;
  hook)
    docker exec -i $DOCKER_CONTAINER_NAME composer captainhook $2
    ;;
  to-generate)
     docker exec -i $DOCKER_CONTAINER_NAME composer generate-transfer -- -c ${PROJECT_ROOT}/config/generator.config.yml
    ;;
  to-samples-generate)
     docker exec -i $DOCKER_CONTAINER_NAME composer generate-transfer -- -c ${PROJECT_ROOT}/doc/samples/config/generator.config.yml
    ;;
  *)
    show_usage
    exit 0
    ;;
esac
